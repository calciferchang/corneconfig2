/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        hr_q {
            bindings = <&kp Q>;
            key-positions = <14 15>;
        };

        hr_tab {
            bindings = <&kp TAB>;
            key-positions = <15 16>;
        };

        punc_lbracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <2 14>;
        };

        punc_lparen {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <15 3>;
        };

        punc_lbrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <4 16>;
        };

        punc_langle {
            bindings = <&kp LESS_THAN>;
            key-positions = <17 5>;
        };

        punc_rangle {
            bindings = <&kp GREATER_THAN>;
            key-positions = <6 18>;
        };

        punc_rbrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <7 19>;
        };

        punc_rparen {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <20 8>;
        };

        punc_rbracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <9 21>;
        };

        lbackspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <2 3>;
        };

        lesc {
            bindings = <&kp ESCAPE>;
            key-positions = <3 4>;
        };

        btlayer {
            bindings = <&mo 4>;
            key-positions = <37 40>;
        };
    };

    behaviors {
        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
&none  &none           &kp W           &kp F               &kp P           &kp B          &kp J                  &kp L            &kp U                &kp Y            &none           &none
&none  &mt LEFT_GUI A  &mt LEFT_ALT R  &mt LEFT_CONTROL S  &mt LEFT_GUI T  &kp G          &kp K                  &mt RIGHT_GUI N  &mt RIGHT_CONTROL E  &mt RIGHT_ALT I  &mt LEFT_GUI O  &none
&none  &kp X           &kp C           &kp D               &kp V           &kp Z          &kp M                  &kp H            &kp COMMA            &kp DOT          &kp FSLH        &none
                                       &kp LGUI            &a mo 2           &lt 1 SPACE    &mt RIGHT_SHIFT ENTER  &mo 3            &kp RALT
            >;
        };

        nav_layer {
            display-name = "nav";
            bindings = <
&none  &none           &kp LS(LC(TAB))    &kp UP_ARROW  &kp LC(TAB)         &none        &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&none  &kp ENTER       &mt LEFT_GUI LEFT  &kp DOWN      &mt LEFT_GUI RIGHT  &kp LG(Z)    &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&none  &kp LEFT_SHIFT  &kp RG(C)          &kp LG(X)     &kp LG(V)           &none        &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                          &kp LGUI      &trans              &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        numpad {
            bindings = <
&trans  &trans           &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans    &kp F10  &kp F7  &kp F8  &kp F9  &trans  &trans
&trans  &trans           &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans    &kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans
&trans  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans    &kp F12  &kp F1  &kp F2  &kp F3  &trans  &trans
                                          &trans           &trans           &trans    &trans   &trans  &trans
            >;
        };

        symbols {
            bindings = <
&none  &none      &kp LS(LA(MINUS))  &kp LS(MINUS)  &kp MINUS     &kp LA(MINUS)    &none          &kp EQUAL          &kp PLUS       &none             &none          &none
&none  &kp GRAVE  &kp LS(AT)         &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)       &kp LS(STAR)   &kp SINGLE_QUOTE  &kp LS(SQT)    &none
&none  &none      &kp SEMI           &kp LS(COLON)  &none         &none            &none          &kp LS(BACKSLASH)  &kp BACKSLASH  &kp LS(EXCL)      &kp LS(QMARK)  &none
                                     &trans         &trans        &trans           &trans         &trans             &trans
            >;
        };

        config_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Config";
            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };
    };
};
